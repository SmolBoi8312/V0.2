[include mainsail.cfg]
[include speed_test.cfg]
#[include neopixel.cfg]
#[include klicky-probe.cfg]

[exclude_object]



## LDO V0.2 Printer Configuration
## NOTE: The order of the [include] are IMPORTANT


#####################################################################
#   User Interface Software
#####################################################################
## Uncomment depending on your software choice either Fluidd or Mainsail
# [include fluidd.cfg]
# [include mainsail.cfg]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_410035000E47313337303439-if00
restart_method: command

[mcu pitb]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66160F4233E3138-if00

##--------------------------------------------------------------------




#####################################################################
#   Main Controller Board
#####################################################################
# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.1 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[printer]
kinematics: corexy
max_velocity: 2000
max_accel: 50000
max_accel_to_decel: 2000
max_z_velocity: 25
max_z_accel: 60
square_corner_velocity: 5  #5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]

step_pin: pitb:MOT1_STEP
dir_pin: !pitb:MOT1_DIR
enable_pin: !pitb:MOT1_EN
endstop_pin: tmc5160_stepper_x:virtual_endstop

#step_pin: PE9
#dir_pin: !PF1
#enable_pin: !PF2
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors                                                 
position_endstop: 0
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: false

#[tmc2209 stepper_x]
#uart_pin: PC13
#diag_pin: PB10
#tx_pin: gpio8
#uart_address: 0
#interpolate: False
#run_current: 0.9
#sense_resistor: 0.110
#stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[tmc5160 stepper_x]
spi_bus: spi0a
cs_pin: pitb:MOT1_CS
diag0_pin: ^!pitb:ENDSTOP_X
run_current: 0.8
sense_resistor: 0.075
driver_sgt: 1
stealthchop_threshold: 0
interpolate: False

#driver_TBL: 1
#driver_HEND: 0
#driver_HSTRT: 1
#driver_TOFF: 4

[stepper_y]

step_pin: pitb:MOT2_STEP
dir_pin: !pitb:MOT2_DIR
enable_pin: !pitb:MOT2_EN
endstop_pin: tmc5160_stepper_y:virtual_endstop
#step_pin: PE11
#dir_pin: !PE8
#enable_pin: !PD7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
#endstop_pin: PE12
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

#[tmc2209 stepper_y]
#uart_pin: PE3
#tx_pin: gpio8
#uart_address: 2
#interpolate: False
#run_current: 0.9
#sense_resistor: 0.110
#stealthchop_threshold: 0  # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#driver_TBL: 1
#driver_HEND: 0
#driver_HSTRT: 1
#driver_TOFF: 4

[tmc5160 stepper_y]
spi_bus: spi0a
cs_pin: pitb:MOT2_CS
diag0_pin: ^!pitb:ENDSTOP_Y
run_current: 0.8
sense_resistor: 0.075
driver_sgt: 1
stealthchop_threshold: 0
interpolate: False

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PE13
dir_pin: !PC2
enable_pin: !PC0
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: PA2
#position_endstop: 120                                          # Default endstp position on the bottom for v0.2
position_max: 120
position_min: -2.5
homing_speed: 8
second_homing_speed: 1.0
homing_retract_dist: 2

[tmc2209 stepper_z]
uart_pin: PE1
#tx_pin: gpio8
#uart_address: 1
interpolate: False
## For LDO-42STH25-1004CL200E 1.0A
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0 # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: PE14
dir_pin: PA0
enable_pin: !PC3
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 22.94                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PB1 # Heat0
sensor_pin:  PF4 # T1 Header 
sensor_type: ATC Semitec 104GT-2 
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type: ATC Semitec 104NT-4-R025H42G                           # LDO Picobilical overrides this setting
#sensor_pin: gpio27                                                  # LDO Picobilical overrides this setting
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 310
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.025     
#pressure_advance: 0.055 # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 1000

[tmc2209 extruder]
uart_pin: PD4
#tx_pin: gpio8
#uart_address: 3
interpolate: False
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3 # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
#run_current: 0.6 # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0  # Set to 0 for spreadcycle, avoid using stealthchop on extruder

run_current: 0.45
#driver_TBL: 0
#driver_HEND: 7
#driver_HSTRT: 7
#driver_TOFF: 3

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PD12
sensor_pin: PF3 # T0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104NT-4-R025H42G 
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                        # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

#[heater_fan hotend_fan]
#pin: gpio18                                                         # LDO Picobilical overrides this setting
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder                                                    # LDO Picobilical overrides this setting
#heater_temp: 50.0                                                   # LDO Picobilical overrides this setting
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
pin: PC8                                                         # LDO Picobilical overrides this setting
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

#[controller_fan pcb_fan]                                            # Optional fan for cooling your PCBs
#pin: gpio20
#max_power: 1.0
#kick_start_time: 0.5                                                
#heater: heater_bed

[controller_fan pi_fan]                                            
pin: PE6
max_power: 1.0
kick_start_time: 0.5                                                
heater: heater_bed

#####################################################################
# Stealth Bed Front Lighting - Kirigami Bed
#####################################################################

#[neopixel bed_light]
## RGB light installed on bed mount
#pin: gpio24
#chain_count: 1
#color_order: GRBW
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    TURN_OFF_HEATERS
    LOGO_OFF
    G84
    LIGHT_OFF
    SET_FAN_SPEED FAN=stepper_fan SPEED=0
#timeout: 28800  #8 hours
timeout: 1800  #30 minutes

# Uncomment this section if you are using physical endstops
# [safe_z_home]
# home_xy_position: 120,120
# speed: 50.0
# z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

#####################################################################
#   LDO Picobilical
#####################################################################
## Comment for the secondary controller board 
# This file contains pin mappings for the LDO V0 Kit using the LDO Picobilical as a secondary controller.
# To use this config, the firmware should be compiled for the Raspberry Pi RP2040

# after running "make", copy the generated "klipper/out/klipper.uf2" firmware file 
# reboot the picobilical controller into BOOTSEL mode while connected to a PC, and copy the firmware file into the controller

## Voron Design VORON0 x LDO Picobilical partial config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] sections

## *MAKE SURE* to include this partial config file *AFTER* the main controller config. 
## This will ensure the relavent sections are overwritten by the picobilical mappings specified here.

#####################################################################
#   X Stepper Settings
#####################################################################

## XES - Toolhead PCB
## Overwrites the X endstop connection 
#[stepper_x]
#endstop_pin: umb:gpio0


#####################################################################
#   Extruder
#####################################################################

## HE0, TH0 - Toolhead PCB
## Overwrites the extruder heater & thermistor connection





#####################################################################
#   Fan Control
#####################################################################

## PCF - Toolhead PCB
## Overwrites the part fan connection 
#[fan]
#pin: umb:gpio2

## HEF - Toolhead PCB
## Overwrites the hotend fan connection 

#[heater_fan hotend_fan]
#pin: umb:gpio3
#heater: extruder
#heater_temp: 50.0

#[fan_generic stealth_rcsc]
#pin: gpio18



#####################################################################
#   Neopixels
#####################################################################

## Neopixel 1 - Frame PCB
#[neopixel rgb1]
#pin: umb:gpio1
#chain_count: 5
#color_order: GRB
#initial_RED: 0.3
#initial_GREEN: 0.3
#initial_BLUE: 0.3

## Neopixel 2 - Frame PCB
#[neopixel rgb2]
#pin: umb:gpio7
#chain_count: 5
#color_order: GRB
#initial_RED: 0.3
#initial_GREEN: 0.3
#initial_BLUE: 0.3

## Buzzer - Frame PCB
#[output_pin beeper]
#pin: umb:gpio5
#value: 0
#shutdown_value: 0

#[gcode_macro M300]
#description: Custom M300 code to allow beeper to be used in gcode
#gcode:
#    {% set TIME_MS = params.P|default(100)|float %}
#    SET_PIN PIN=beeper VALUE=1
#    G4 P{TIME_MS}
#    SET_PIN PIN=beeper VALUE=0

#####################################################################
#   Additional Sensors
#####################################################################





[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor chamber_temp]
sensor_pin:  PF5
sensor_type: Generic 3950
min_temp: 10
max_temp: 100

[temperature_sensor pitb_mcu]
sensor_type: temperature_mcu
sensor_mcu: pitb

#[temperature_sensor mcu_umb_temp]
#sensor_type: temperature_mcu
#sensor_mcu: umb
#min_temp: 0
#max_temp: 100

#[probe]
#pin: ^gpio16
#x_offset: -17.5
#y_offset: 17.0
#z_offset: 12
#speed: 3.0
#samples: 3
#sample_retract_dist: 2.0
#lift_speed:10
#samples_tolerance_retries: 3


## FS - Frame PCB
## Filament Sensor 1
#[filament_switch_sensor runout_sensor]
#switch_pin: umb:gpio6
#pause_on_runout: True

## SU - Frame PCB
## Filament Sensor 2
#[gcode_button filament_sensor_button]
#pin: umb:gpio18
# release_gcode: {INSERT YOUR GCODE HERE}

## Sensorless Homing
## This file contains configuration and macros pertaining to sensorless homing for the Voron 0.2 
## It is based on this guide: https://docs.vorondesign.com/community/howto/clee/sensorless_xy_homing.html

## *MAKE SURE* to include this config file *AFTER* the main controller config. 
## This will ensure the relavent sections are overwritten by the configurations specified here.

## If using SKR Pico or SKR mini E3 mainboards, make sure to set the X-DIAG and Y-DIAG jumpers to enable sensorless homing
## See here https://github.com/bigtreetech/SKR-Pico/blob/master/Hardware/BTT%20SKR%20Pico%20V1.0-PIN.pdf

[stepper_x]
#endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_speed: 40
homing_retract_dist: 0

#[tmc5160 stepper_x] 
#driver_SGTHRS: 90  #Tune this, use the highest value that will not cause a false trigger 90

[stepper_y]
homing_speed: 40
homing_retract_dist: 0


[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.35 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_X

    # Home
    G28 X
    # Move away
    G91
    G1 X60 F10000

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P500
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_X

    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set PRINT_CURRENT = 0.8 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={PRINT_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={PRINT_CURRENT}

[gcode_macro _HOME_Y]
gcode:
#    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.35 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SAVE_GCODE_STATE NAME=STATE_HOME_Y

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-5 F10000

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P500
    # Set current during print
#    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    RESTORE_GCODE_STATE NAME=STATE_HOME_Y
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set PRINT_CURRENT = 0.8 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={PRINT_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={PRINT_CURRENT}

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    # Home Z first, to avoid any situation where the nozzle might scrape the bed
    {% if home_all or 'Z' in params %}
        G28 Z
    {% endif %}

    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}

    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}
    
    G90
    G0 X60 Y60 F10000 # move to bed center
    RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set PRINT_CURRENT = 0.8 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={PRINT_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={PRINT_CURRENT}
    SET_FAN_SPEED FAN=stepper_fan SPEED=1

#[bed_mesh]
#speed: 50
#horizontal_move_z: 12
#mesh_min: 2,19
#mesh_max: 100.5,118
#probe_count: 5, 5
#fade_start: 0.6
#fade_end: 115.0
#relative_reference_index: 12
#algorithm: bicubic


## LDO recommended macros to get you started
# These macros are recommended by LDO
# You can copy these entries into your printer.cfg.
# 
# Alternatively, 
# You can copy these entries into your printer.cfg.
# 

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
#    LOGO_PENDING
#    _BED_HEATING
    M190 S{bedtemp}                                                              ; set & wait for bed temp
    M104 S170
    G28
    G0 Z60 F3400
#    _HEAT_SOAKING
#    SET_FAN_SPEED FAN=stealth_rcsc SPEED=100
    M106 S255
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={chambertemp}   ; wait for chamber temp
    G28 Z
#    BED_MESH_PROFILE LOAD=default
    M107
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp
    G90                            ; absolute positioning    
    G1 E4.0 F3600
#    SET_FAN_SPEED FAN=stealth_rcsc SPEED=0
    NOZZLE_PURGE
#    PURGE_BLOB
    G90
#    STATUS_PRINTING
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
#    _CELEBRATE_PRINT
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning
#    SET_FAN_SPEED FAN=stealth_rcsc SPEED=0

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 5.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y110 F3600          ; park nozzle at rear
#    M84



[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  CHOME
  G91                         ; relative positioning
  G1 Z20                      ; move nozzle upwards
  FRONT                       ; move the toolhead to the front
#  LOGO_PENDING
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
#  LOGO_READY
  M83                         ; set extruder to relative mode
  G1 E5 F1800
  G1 E-8 F1800                ; quickly retract a small amount to elimate stringing
  G4 P200                     ; pause for a short amount of time
  G1 E-50 F2000                ; retract slowly the rest of the way
  G1 E-20 F2000
  M400                        ; wait for moves to finish
  M117 Unload Complete!
#  LOGO_OFF

[gcode_macro LOAD_FILAMENT]
description: Loads new filament into toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  FRONT                       ; move the toolhead to the front
#  LOGO_PENDING
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
#  LOGO_READY
  M83                         ; set extruder to relative mode
  G1 E50 F300                 ; extrude slowlyL
  G1 E50 F300
  M400                        ; wait for moves to finish
  M117 Load Complete!
#  LOGO_OFF

[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y{x_center} F7800

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y10 F7800

[gcode_macro BACK]
description: Moves the toolhead to the back
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y110 F7800

[gcode_macro NOZZLE_PURGE]
description: Draw a purge line at the front left edge of the build plate
gcode:
  CHOME
  G0 X4.5 Y3 F3000 ; Go to front
  G0 Z0.15 ; Drop to bed
  M83 ; Set extruder to relative mode
  G1 X47 E17 F500 ; Extrude 25mm of filament in a 4cm line
  G1 E-0.5 F400 ; Retract a little
  G1 X52 E9.5 F500 ; Quickly wipe away from the filament line
  G1 Z0.3 ; Raise and begin printing.

[gcode_macro PURGE_BLOB]
gcode:
    # This is for a 300mm bed. If you have a diferent bed size you may want to adjust the line below
    M117 Purging at X1                                                       
    
    # The start pos will be within the "handle" of the flex plate where there is some extra Y space available so we can go all the way to Y0
    # If your setup does not have this extra space then just increase the y valie in the line "G1 X{ rand_pos } Y0 Z1 F18000"
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning
    G1 X1 Y0 Z2 F18000   ; Go to start pos for perge line
    G1 Z1 F600                    ; Lower to purge height
    G91                             ; relative positioning
    G1 X5 E40 F40                   ; Extrude blob of filament on the bed
    M106 P0                         ; Enable Cooling Fan
    G1 X20 Z5 F100                  ; Slow drag away from the blob with fans helping cool and break strings. Also raiz z zo the blob clears the fan duct
    G1 X5  Z-5.1 F9000              ; Now that the blob has cleared the duct we go back down for a short 0.3mm height extrusion
    G1 X5 E2 F180                   ; Slow 5mm extrude move to help with stringing
    G1 X30 E-1 F6000                ; Fast move and retract to break strings and reduce ooze
    G1 Z1 F100                      ; Lift
    M106 P0 S0                      ; Disable Cooling Fan
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(110)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro screw_adjust]
gcode:
    BED_SCREWS_ADJUST

[gcode_macro z_adjust]
gcode:
    Z_ENDSTOP_CALIBRATE

[gcode_macro x_shaper]
gcode:
    TEST_RESONANCES AXIS=X

[gcode_macro y_shaper]
gcode:
    TEST_RESONANCES AXIS=Y


[screws_tilt_adjust]
screw1: 77.5,2
screw1_name: front screw
screw2: 27.5,98
screw2_name: back left
screw3:120,98
screw3_name: back right
speed: 50
horizontal_move_z: 12
screw_thread: CW-M3



[gcode_macro FAN_ON]
gcode:
  SET_FAN_SPEED FAN=hotend_fan SPEED=0.5
  SET_FAN_SPEED FAN=fan SPEED=0.5

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:gpiochip0/gpio74
spi_bus: spidev1.1

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 60  # an example

[input_shaper]
shaper_freq_x: 101.0
shaper_type_x: zv
shaper_freq_y: 92.8
shaper_type_y: zv


[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 60.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 110.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
gcode:


[fan_generic stepper_fan]
pin: pitb:FAN0

[gcode_macro stepper_fan_off]
gcode:
    SET_FAN_SPEED FAN=stepper_fan SPEED=0

[gcode_macro stepper_fan_on]
gcode:
    SET_FAN_SPEED FAN=stepper_fan SPEED=1

[board_pins pitb]
mcu: pitb
aliases:
    ## Board enable LED
    LED_RUN=gpio15,

    ## Can pins. STANDBY can be pulled low if you're running USB to disable the transceiver
    ## https://www.nxp.com/docs/en/data-sheet/TJA1040.pdf page 4
    CAN_TX=gpio13, CAN_RX=gpio14, CAN_STANDBY=gpio25,

    ## SPI for motors. spi_bus: spi0a
    MISO=gpio0, MOSI=gpio3, SCLK=gpio2,

    ## Stepper pins
    MOT1_EN=gpio5, MOT1_CS=gpio6,  MOT1_DIR=gpio7,  MOT1_STEP=gpio8,
    MOT2_EN=gpio9, MOT2_CS=gpio10, MOT2_DIR=gpio11, MOT2_STEP=gpio12,

    ## Endstop pins, or DIAG with jumpers
    ENDSTOP_X=gpio23, ENDSTOP_Y=gpio24,

    ## I2C bus: i2c0e
    SCL=gpio17, SDA=gpio16,

    ## Other IO
    FAN0=gpio20, FAN1=gpio21, THERM0=gpio26,
    RGB=gpio29,

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.335
#*# pid_ki = 1.340
#*# pid_kd = 119.708
#*#
#*# [stepper_z]
#*# position_endstop = 97.365
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.129167, -0.083750, -0.110417, -0.081250, -0.017917
#*# 	-0.089583, -0.050833, -0.020000, -0.008333, -0.054583
#*# 	-0.072917, -0.043333, 0.000000, 0.008333, -0.081667
#*# 	-0.062083, 0.002500, -0.025833, -0.003750, -0.063333
#*# 	-0.021250, -0.051250, -0.073333, -0.067083, -0.070417
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 110.0
#*# min_y = 10.0
#*# max_y = 92.0
